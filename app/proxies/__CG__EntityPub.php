<?php

namespace Kdyby\GeneratedProxy\__CG__\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Pub extends \Entity\Pub implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function & __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', array($name));

        return parent::__get($name);
    }

    /**
     * {@inheritDoc}
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', array($name, $value));

        return parent::__set($name, $value);
    }

    /**
     * {@inheritDoc}
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', array($name));

        return parent::__isset($name);

    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Entity\\Pub' . "\0" . 'id', '' . "\0" . 'Entity\\Pub' . "\0" . 'name', '' . "\0" . 'Entity\\Pub' . "\0" . 'long_name', '' . "\0" . 'Entity\\Pub' . "\0" . 'mark', '' . "\0" . 'Entity\\Pub' . "\0" . 'beerMark', '' . "\0" . 'Entity\\Pub' . "\0" . 'wineMark', '' . "\0" . 'Entity\\Pub' . "\0" . 'foodMark', '' . "\0" . 'Entity\\Pub' . "\0" . 'toaletsMark', '' . "\0" . 'Entity\\Pub' . "\0" . 'serviceMark', '' . "\0" . 'Entity\\Pub' . "\0" . 'overallMark', '' . "\0" . 'Entity\\Pub' . "\0" . 'location', '' . "\0" . 'Entity\\Pub' . "\0" . 'address', '' . "\0" . 'Entity\\Pub' . "\0" . 'latitude', '' . "\0" . 'Entity\\Pub' . "\0" . 'longitude', '' . "\0" . 'Entity\\Pub' . "\0" . 'hidden', '' . "\0" . 'Entity\\Pub' . "\0" . 'ratings');
        }

        return array('__isInitialized__', '' . "\0" . 'Entity\\Pub' . "\0" . 'id', '' . "\0" . 'Entity\\Pub' . "\0" . 'name', '' . "\0" . 'Entity\\Pub' . "\0" . 'long_name', '' . "\0" . 'Entity\\Pub' . "\0" . 'mark', '' . "\0" . 'Entity\\Pub' . "\0" . 'beerMark', '' . "\0" . 'Entity\\Pub' . "\0" . 'wineMark', '' . "\0" . 'Entity\\Pub' . "\0" . 'foodMark', '' . "\0" . 'Entity\\Pub' . "\0" . 'toaletsMark', '' . "\0" . 'Entity\\Pub' . "\0" . 'serviceMark', '' . "\0" . 'Entity\\Pub' . "\0" . 'overallMark', '' . "\0" . 'Entity\\Pub' . "\0" . 'location', '' . "\0" . 'Entity\\Pub' . "\0" . 'address', '' . "\0" . 'Entity\\Pub' . "\0" . 'latitude', '' . "\0" . 'Entity\\Pub' . "\0" . 'longitude', '' . "\0" . 'Entity\\Pub' . "\0" . 'hidden', '' . "\0" . 'Entity\\Pub' . "\0" . 'ratings');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Pub $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLongName($longName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLongName', array($longName));

        return parent::setLongName($longName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLongName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLongName', array());

        return parent::getLongName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLong_name($longName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLong_name', array($longName));

        return parent::setLong_name($longName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLong_name()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLong_name', array());

        return parent::getLong_name();
    }

    /**
     * {@inheritDoc}
     */
    public function setMark($mark)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMark', array($mark));

        return parent::setMark($mark);
    }

    /**
     * {@inheritDoc}
     */
    public function getMark()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMark', array());

        return parent::getMark();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocation($location)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocation', array($location));

        return parent::setLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', array());

        return parent::getLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', array($address));

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', array());

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setLatitude($latitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLatitude', array($latitude));

        return parent::setLatitude($latitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLatitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLatitude', array());

        return parent::getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setLongitude($longitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLongitude', array($longitude));

        return parent::setLongitude($longitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLongitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLongitude', array());

        return parent::getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setHidden($hidden)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHidden', array($hidden));

        return parent::setHidden($hidden);
    }

    /**
     * {@inheritDoc}
     */
    public function getHidden()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHidden', array());

        return parent::getHidden();
    }

    /**
     * {@inheritDoc}
     */
    public function addRating(\Entity\Rating $rating)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRating', array($rating));

        return parent::addRating($rating);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRating(\Entity\Rating $rating)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRating', array($rating));

        return parent::removeRating($rating);
    }

    /**
     * {@inheritDoc}
     */
    public function getRatings()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRatings', array());

        return parent::getRatings();
    }

    /**
     * {@inheritDoc}
     */
    public function setBeerMark($beerMark)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBeerMark', array($beerMark));

        return parent::setBeerMark($beerMark);
    }

    /**
     * {@inheritDoc}
     */
    public function setWineMark($wineMark)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWineMark', array($wineMark));

        return parent::setWineMark($wineMark);
    }

    /**
     * {@inheritDoc}
     */
    public function setFoodMark($foodMark)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFoodMark', array($foodMark));

        return parent::setFoodMark($foodMark);
    }

    /**
     * {@inheritDoc}
     */
    public function setToaletsMark($toaletsMark)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToaletsMark', array($toaletsMark));

        return parent::setToaletsMark($toaletsMark);
    }

    /**
     * {@inheritDoc}
     */
    public function setServiceMark($serviceMark)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServiceMark', array($serviceMark));

        return parent::setServiceMark($serviceMark);
    }

    /**
     * {@inheritDoc}
     */
    public function setOverallMark($overallMark)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOverallMark', array($overallMark));

        return parent::setOverallMark($overallMark);
    }

    /**
     * {@inheritDoc}
     */
    public function getBeerMark()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBeerMark', array());

        return parent::getBeerMark();
    }

    /**
     * {@inheritDoc}
     */
    public function getWineMark()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWineMark', array());

        return parent::getWineMark();
    }

    /**
     * {@inheritDoc}
     */
    public function getFoodMark()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFoodMark', array());

        return parent::getFoodMark();
    }

    /**
     * {@inheritDoc}
     */
    public function getToaletsMark()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToaletsMark', array());

        return parent::getToaletsMark();
    }

    /**
     * {@inheritDoc}
     */
    public function getServiceMark()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServiceMark', array());

        return parent::getServiceMark();
    }

    /**
     * {@inheritDoc}
     */
    public function getOverallMark()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOverallMark', array());

        return parent::getOverallMark();
    }

    /**
     * {@inheritDoc}
     */
    public function recompute()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'recompute', array());

        return parent::recompute();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function array_map(callable $val, callable $key, array $array)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'array_map', array($val, $key, $array));

        return parent::array_map($val, $key, $array);
    }

    /**
     * {@inheritDoc}
     */
    public function toSelect($collection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toSelect', array($collection));

        return parent::toSelect($collection);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function __call($name, $args)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', array($name, $args));

        return parent::__call($name, $args);
    }

    /**
     * {@inheritDoc}
     */
    public function __unset($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__unset', array($name));

        return parent::__unset($name);
    }

}
